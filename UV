**Sumário**
este projeto consiste na construção de um sensor de Ultra Violeta (UV) e um segmento de display com o índice UV

**Objetivos**
- Utilização do sensor de UV e umsegmento de display;
- Calibrar o sensor usando os dados do Ipma
- Usar umas escala mais curta de 5 categorias
- Leitura de um pino analógico;
- Componentes de programação do ARDUINO

**Procedimento**
- Listar o material
- Abrir o ARDUINO IDE;
- Conectar o USB A/B ao arduino;
- Abrir o "monitor serie" e analisar os dados;
- Abrir o "Plotter Serie" e analisar o comportamento do sensor;
- Testar e comparar com sons tipicos da primeira referência: ajustar valores no código;
- DOCUMENTAR: útil em sala de aula? Se sim, como poderia ser aplicado? Que problemas se identificam? Alterações a propôr? 


**Análise do Código**
- Identificar as três componentes principais no código do ARDUINO IDE: procurar o inicio e fim das chavetas;
- Identificar a função de comunicação com o computador;
- Identificar o pino a que está conectado o sensor de som;


**Outras ideias para desenvolver**
- Calibrar o sensor 
- Comentar o código: descrever cada linha de código
- integração do ARDUINO com o PROCESSING;


**Glossário**
Indice UV -  

Material

**Referências** 
[Indice UV Ipma](https://www.ipma.pt/pt/enciclopedia/amb.atmosfera/uv/index.html)
[UVM30A UV Sensor](https://electropeak.com/learn/interfacing-uvm30a-uv-light-sensor-module-with-arduino/)
[mais acerca dos sensor UVM30A UV Sensor](https://www.electronics-lab.com/project/arduino-uv-meter-using-uv30a-ultraviolet-sensor/)
[Display de segmento](https://create.arduino.cc/projecthub/aboda243/get-started-with-seven-segment-c73200)
[UV meter - dronebot](https://dronebotworkshop.com/arduino-uv-index-meter/)

`Código ARDUINO`

/*
  Showing numbers, chars and phrases
                             A (seg[0] in this project)
                            ---
F (seg[5] in this project) |   | B (seg[1] in this project)
                           |   | 
                            --- G (seg[6] in this project)
E (seg[4] in this project) |   | 
                           |   | C (seg[2] in this project)
                            ---  . dot or dicimal (seg[7] in this project)
                             D (seg[3] in this project)

 */
#define A 10
#define B 7
#define C 6
#define D 5
#define E 4
#define F 3
#define G 2
#define DP 9 // decimal
#define common_cathode 1
#define common_anode 0
bool segMode = common_cathode; // set this to your segment type, my segment is common_cathode
int seg[] {A,B,C,D,E,F,G,DP}; // segment pins
byte chars = 35; // max value in the array "Chars"

byte Chars[35][9] { 
            {'0',1,1,1,1,1,1,0,0},//0
            {'1',0,1,1,0,0,0,0,0},//1
            {'2',1,1,0,1,1,0,1,0},//2
            {'3',1,1,1,1,0,0,1,0},//3
            {'4',0,1,1,0,0,1,1,0},//4
            {'5',1,0,1,1,0,1,1,0},//5
            {'6',1,0,1,1,1,1,1,0},//6
            {'7',1,1,1,0,0,0,0,0},//7
            {'8',1,1,1,1,1,1,1,0},//8
            {'9',1,1,1,1,0,1,1,0},//9
            {'a',1,1,1,0,1,1,1,0},//A/10
            {'b',0,0,1,1,1,1,1,0},//b/11
            {'c',1,0,0,1,1,1,0,0},//C/12
            {'d',0,1,1,1,1,0,1,0},//d/13
            {'e',1,0,0,1,1,1,1,0},//E/14
            {'f',1,0,0,0,1,1,1,0},//F/15
            {'g',1,0,1,1,1,1,0,0},//G/16
            {'h',0,1,1,0,1,1,1,0},//H/17
            {'i',0,0,0,0,1,1,0,0},//I/18
            {'j',0,1,1,1,1,0,0,0},//J/19
            {'l',0,0,0,1,1,1,0,0},//L/20
            {'n',0,0,1,0,1,0,1,0},//n/21
            {'o',0,0,1,1,1,0,1,0},//o/22
            {'p',1,1,0,0,1,1,1,0},//P/23
            {'q',1,1,1,0,0,1,1,0},//q/24
            {'r',0,0,0,0,1,0,1,0},//r/25
            {'s',1,0,1,1,0,1,1,0},//S/26   looks like number 5
            {'t',0,0,0,1,1,1,1,0},//t/27
            {'u',0,1,1,1,1,1,0,0},//U/28
            {'y',0,1,1,1,0,1,1,0},//y/29
            {'-',0,0,0,0,0,0,1,0},//-/30
            {'.',0,0,0,0,0,0,0,1},//./31
            {']',1,1,1,1,0,0,0,0},//]/32
            {'[',1,0,0,1,1,1,0,0},//[/33
            {'_',0,0,0,1,0,0,0,0},//_/34
            };

void setup() {
  // initialize serial communication at 9600 bits per second:
  Serial.begin(9600);
  // set segment pins as OUTPUT
pinMode(seg[0],OUTPUT);
pinMode(seg[1],OUTPUT);
pinMode(seg[2],OUTPUT);
pinMode(seg[3],OUTPUT);
pinMode(seg[4],OUTPUT);
pinMode(seg[5],OUTPUT);
pinMode(seg[6],OUTPUT);
pinMode(seg[7],OUTPUT);

}
// the loop routine runs over and over again forever:
void loop() {
 // read the input on analog pin 0:
  int sensorValue = analogRead(A0);
  // Convert the analog reading (which goes from 0 - 1023) to a voltage (0 - 5V):
  int voltage = round(sensorValue * (5.0 / 1023.0));
  Print(voltage);
  Serial.println("---");
  Serial.println(voltage);
  Serial.println(sensorValue);
  delay(1000);
  
  
  /* for(int i = 0;i < chars;i++) //print
  {
    Print(i);
   delay(1000);
  }
  */
 

  //Print(number or character); // print any number or character on the segment ( Note : you can't use capital characters )
  //setState(state); //sets the hole segment state to "state"

}

void setState(bool mode) //sets the hole segment state to "mode"
{ for(int i = 0;i<=6;i++)
{
  digitalWrite(seg[i],mode);
}
}



void Print(char Char) // print any character on the segment ( Note : you can't use capital characters )
{ 
  int charNum = -1;// set search resault to -1
  setState(segMode);//turn off the segment
  
for(int i = 0; i < chars ;i++){//search for the enterd character
  if(Char == Chars[i][0]){//if the character found
    charNum = i;//set the resault number into charNum ( because this function prints the character using it's number in the array )
  }
}
 
if(charNum == -1 )// if the character not found
{
  for(int i = 0;i <= 6;i++)
  {
  digitalWrite(seg[i],HIGH);
  delay(100);
  digitalWrite(seg[i],LOW);
  }
  for(int i = 0;i <= 2;i++)
{
  delay(100);
  setState(HIGH);
  delay(100);
  setState(LOW); 
}
}else // else if the character found print it
 {
for(int i = 0;i<8;i++)
    {digitalWrite(seg[i],Chars[charNum][i+1]);
    }
 }

}

void Print(int num) // print any number on the segment
{ 
  setState(segMode);//turn off the segment
  

 
if(num > chars || num < 0 )// if the number is not declared
{
  for(int i = 0;i <= 6;i++)
  {
  digitalWrite(seg[i],HIGH);
  delay(100);
  digitalWrite(seg[i],LOW);
  }
  for(int i = 0;i <= 2;i++)
{
  delay(100);
  setState(HIGH);
  delay(100);
  setState(LOW); 
}
}else // else if the number declared, print it
 {
  if(segMode == 0){ //for segment mode
for(int i = 0;i<8;i++)
    {digitalWrite(seg[i],Chars[num][i+1]);
    }
 }
 else{
  for(int i = 0;i<8;i++)
    {digitalWrite(seg[i],!Chars[num][i+1]);
    }
 }
 }
}


`Código PROCESSING`

